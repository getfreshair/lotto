@Entity : class name위에 작성하고 Entity라고 명시하는 어노테이션

@Id : 식별자(PK)

@GeneratedValue(strategy=GenerationType.IDENTITY) : 
	DB가 auto_incerement를 통해 생성한 값을 식별자로 사용, @Id 어노테이션이 적용 되어 있어야 하며 안되어 있을 경우 예외 발생
	식별자는 DB에서 할당 받은 데이터가 삽입 되므로 나머지 필드에 대해서만 값을 대입
	** 중요 :
		JPA 트랜잭션이 커밋되기 전 persist() 메소드가 실행되는 시점에서 insert 쿼리가 실행이 됨
		IDENTITY 전략을 사용할 경우 DB에 insert하지 않는 이상 식별자를 할당할 수 없으므로 insert와 동시에 할당받은 값을 식별자로 사용하기 때문
		롤백이 될 경우 auto_incerement에 의해 이미 값이 생성 됐으므로 이후 값이 할당이 됨
	** 중요 :
	     기본키는 2가지로 나뉘며	1. 자연키 : 전화번호, 이메일처럼 비즈니스적으로 의미있는 키를 말하며
	 				2. 대체키 : 비즈니스와 상관없는 임의로 만들어진 키를 가르킴 ex) 1, 2, 3, ...
	  applicaiton.yml 아래 설정 추가   
	   > hibernate.id.new_generator_mappings = true * 해당 부분은 버전 별로 자동 설정 값이 다르므로 유의
	     기본키 자동생성 방법 
			IDENTITY : 기본 키 생성을 데이터베이스에 위임하는 방법 (데이터베이스에 의존적)
			- 주로 MySQL, PostgresSQL, SQL Server, DB2에서 사용합니다.
			- @Id
			  @Column(name = "member_id")
			  @GeneratedValue(strategy = GenerationType.IDENTITY)
			  private Long id;
			  
			SEQUENCE : 데이터베이스 시퀀스를 사용해서 기본 키를 할당하는 방법 (데이터베이스에 의존적)
			- 주로 시퀀스를 지원하는 Oracle, PostgresSQL, DB2, H2에서 사용합니다. 
			- @SequenceGenerator를 사용하여 시퀀스 생성기를 등록하고, 실제 데이터베이스의 생성될 시퀀스이름을 지정해줘야 합니다.
			- @Entity
			  @SequeceGenerator(name = "TEAM_SEQ_GENERATOR", sequenceName = "TEAM_SEQ", initialValue = 1, allocationSize = 1)
			                    name = 식별자 생성기 이름, sequenceName=DB에 등록될 시퀀스이름, initialValue=최초시작하는 수, allocationSize=증가하는수)
			  public class Team{
				@Id
				@Column(name = "member_id")
				@GeneratedValue(strategy = GenerationType. SEQUENCE, generator = "TEAM_SEQ_GENERATOR")
				private Long id;
			  }
			  
			TABLE : 키 생성 테이블을 사용하는 방법
			- 키 생성 전용 테이블을 하나 만들고 여기에 이름과 값으로 사용할 컬럼을 만드는 방법입니다.
			- 테이블을 사용하므로, 데이터베이스 벤더에 상관없이 모든 데이터베이스에 적용이 가능합니다.
			- @Entity
			  @TableGenerator(name="TEAM_SEQ_GENERATOR", table="TEAM_SEQUENCES", pkColumnValue="TEAM_SEQ", allocationSize=1)
			                  name=식별자 생성기 이름, table=키생성 테이블 이름, pkColumnValue=DB에 등록될 시퀀스이름)
			  public class Team{
				@Id
				@Column(name = "member_id")
				@GeneratedValue(strategy = GenerationType. TABLE, generator = "TEAM_SEQ_GENERATOR")
				private Long id;
			  }
			  
			AUTO : 데이터베이스 벤더에 의존하지 않고, 데이터베이스는 기본키를 할당하는 벙법
			- 데이터베이스에 따라서 IDENTITY, SEQUENCE, TABLE 방법 중 하나를 자동으로 선택해주는 방법입니다.
			- 예를들어, Oracle일 경우 SEQUENCE를 자동으로 선택해서 사용합니다. 따라서, 데이터베이스를 변경해도 코드를 수정할 필요가 없습니다.
			- @Id
			  @Column(name = "member_id")
			  @GeneratedValue(strategy = GenerationType. AUTO)
			  private Long id;
	 
@Column : 
	table 컬럼과 연동
	속성 : 
		name = "member_id" > 컬럼 이름 설정
		columnDefinition = "serial" > 컬럼 타입 설정
		strategy = 식별자 값 설정 
		